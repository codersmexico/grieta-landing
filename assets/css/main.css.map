{"version":3,"sources":["main/2-base/_general.scss","main/1-abstracts/_config.scss","main/2-base/_typography.scss","main/2-base/_forms.scss","../../../node_modules/manila-mixins/src/mixins/_placeholder.sass","../../../node_modules/manila-mixins/src/mixins/_breakpoints.sass","main/4-components/_buttons.scss","main/4-components/_footer.scss","main/5-pages/home/_hero.scss","main/1-abstracts/_mixins.scss","../../../node_modules/manila-mixins/src/mixins/_size.sass"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["html {\n  box-sizing: border-box;\n}\n*, *::before, *::before {\n  box-sizing: inherit;\n}\n\n::selection {\n  background: $main-color;\n  color: $white;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\nimg {\n  max-width: 100%;\n}\n\n.is-hidden {\n  position: absolute;\n  height: 0;\n  width: 0;\n  visibility: hidden;\n}\n\nsvg[class^=\"icon-\"] {\n  fill: currentColor;\n  stroke: none;\n  max-width: 100%;\n}\n","// =======================================\n// =            Global Config            =\n// =======================================\n\n// Colors\n$white: #ffffff;\n$black: #000000;\n$gray: #797e83;\n$orange: #F2880E;\n$red: #e13a41;\n$blue: #0d719a;\n\n$main-color: $blue;\n\n// Typography\n$system-fonts: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;\n$font-family--primary: 'Lato', sans-serif;\n\n// Text\n$base-font-size: 1em;\n$base-line: 1.3;\n\n// Modular Scale - https://github.com/modularscale/modularscale-sass/tree/3.x\n$ms-base:  1rem;\n$ms-ratio: $major-third;\n\n// Stuff for the BassCss-like classes\n$total-stops: 5;\n\n// Typographic Weights\n$fw-thin: 100;\n$fw-extra-light: 200;\n$fw-light: 300;\n$fw-regular: 400;\n$fw-medium: 500;\n$fw-semi-bold: 600;\n$fw-bold: 700;\n$fw-extra-bold: 800;\n$fw-ultra-bold: 900;\n\n// Transitions\n$trns-duration: .2s;\n$sexy-bezier: cubic-bezier(0,0,0,2.41);\n$sexy-transition: $trns-duration $sexy-bezier;\n\n// Grid\n$column-gutter: 20px;\n$columns--total: 12;\n\n// Breakpoints\n$breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px\n);\n","html {\n  min-height: 100%;\n  position: relative;\n  background-color: $white;\n  color: $black;\n  font-family: $system-fonts;\n  font-weight: $fw-regular;\n  line-height: $base-line;\n  font-size: $base-font-size;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  &.wf-active {\n    font-family: $font-family--primary;\n  }\n}\n\nbody {\n  font-family: inherit;\n}\n\ninput,\ntextarea {\n  font-family: inherit;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n  transition: $trns-duration;\n  &:focus {\n    outline: 1px dotted;\n  }\n}\n",".form-group {\n  margin-bottom: 6px;\n}\n\n.form-control {\n  color: #4a4a4a;\n  font-size: 12px;\n  box-shadow: inset 0 0 3px 0 rgba(0,70,126,0.33);\n  border: none;\n  border-radius: 0;\n  @include placeholder {\n    font-size: 12px;\n    color: #4a4a4a;\n  }\n  @include breakpoint(sm) {\n    padding: rem(11) 0.75rem;\n  }\n}\n","/// To change the color of some inputs placeholder like on npmjs.com\n/// Please use responsibly try to use semi-transparent colors to indicate a placeholder\n/// Don't be an asshole and use the same color for the placeholder and the input\n///\n/// @group styling\n/// @parameter {color} $color The color of the placeholder\n///\n/// @example scss Input\n///   .custom-placeholder {\n///     @include placeholder() {\n///       color: red;\n///     }\n///   }\n///\n/// @example css Output\n///   .custom-placeholder::-webkit-input-placeholder {\n///     color: red; }\n///\n///   .custom-placeholder::-moz-placeholder {\n///     color: red;\n///     opacity: 1; }\n///\n///   .custom-placeholder:-ms-input-placeholder {\n///     color: red; }\n///\n///   .custom-placeholder::-ms-input-placeholder {\n///     color: red; }\n///\n///   .custom-placeholder:placeholder-shown {\n///     color: red; }\n\n@mixin placeholder() {\n  &::-webkit-input-placeholder {\n    @content; }\n  &::-moz-placeholder {\n    @content; }\n  &:-ms-input-placeholder {\n    @content; }\n  &::-ms-input-placeholder {\n    @content; }\n  &:placeholder-shown {\n    @content; } }\n","/// Never do `@media(min-width: xxx)` again, do it in a sensible way.\n/// **This requires the breakpoints map on the settings** you can add remove and rename your breakpoints at will. BYOB (Bring your own Breakpoints)\n/// @group layout\n/// @parameter {string} $breakpoint - A valid breakpoint from the `$breakpoints` map\n///\n/// @example scss Input\n///   .mobile-first {\n///     font-size: 1em;\n///\n///     @include breakpoint(laptop) {\n///       font-size: 2em;\n///     }\n///\n///\n///     @include breakpoint(desktop) {\n///       font-size: 3em;\n///     }\n///   }\n///\n/// @example css Output\n///   .mobile-first {\n///     font-size: 1em; }\n///     @media (min-width: 992px) {\n///       .mobile-first {\n///         font-size: 2em; } }\n///     @media (min-width: 1200px) {\n///       .mobile-first {\n///         font-size: 3em; } }\n\n@mixin breakpoint ($breakpoint) {\n  $value: map-get($breakpoints, $breakpoint);\n  @if $value != null {\n    @media (min-width: $value) {\n      @content; } }\n  @else {\n    @error \"Sadly #{$breakpoint} does not exists 😩 please check Manila's _settings.scss to know which you can use\"; } }\n",".btn {\n  font-weight: 700;\n  text-transform: uppercase;\n  border-radius: 0;\n}\n",".footer {\n  padding: ms(2) 0;\n  .paid-for {\n    text-transform: uppercase;\n    border: 1px solid;\n    padding: 3px;\n    text-align: center;\n    font-size: 11px;\n    max-width: 200px;\n    margin-bottom: 10px;\n    margin: 0 auto;\n  }\n\n  .links {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    list-style: none;\n\n    a {\n      display: block;\n      padding: 0.5em;\n      color: rgba($blue, 0.6);\n      font-size: 10px;\n    }\n  }\n}\n",".home-hero {\n  @include std-background;\n  background-color: rgba($blue, 0.5);\n  background-image: url('../images/hero.jpg');\n  position: relative;\n  padding-bottom: 40px;\n  text-align: center;\n  border-bottom: 10px solid $blue;\n  padding-top: 10px;\n  min-height: 100vh;\n\n  @include breakpoint(sm) {\n    padding-top: 0;\n  }\n\n  @include breakpoint(md) {\n    padding-bottom: 110px;\n  }\n\n  &::before {\n    position: absolute;\n    content: '';\n    @include size(100%);\n    background: rgba(74,74,74,0.25);\n    top: 0;\n    left: 0;\n  }\n\n  .overlay {\n    width: 100%;\n    @include breakpoint(md) {\n      max-width: 400px;\n      flex-basis: 400px;\n      margin-left: auto;\n    }\n  }\n\n  .call-to-action {\n    background: rgba($white, 0.9);\n    padding: 10px;\n    @include breakpoint(md) {\n      padding: 20px 35px;\n    }\n  }\n\n  .logo {\n    margin-bottom: 10px;\n    display: block;\n\n    color: $blue;\n  }\n\n  .video-toggle {\n    margin-bottom: 15px;\n  }\n\n  img {\n    display: block;\n    margin: 0 auto;\n  }\n\n  hr {\n    border-color: rgba($blue, 0.4);\n    margin: 0;\n    margin-bottom: 6px;\n  }\n\n  h4 {\n    margin-bottom: 15px;\n  }\n\n  .link {\n    color: $main-color;\n    border-bottom: 1px solid;\n  }\n\n  .special-row {\n    margin-bottom: 6px;\n    @include breakpoint(sm) {\n      display: flex;\n      align-items: center;\n      margin: 0 -7px 6px;\n    }\n  }\n\n  .column {\n    @include breakpoint(sm) {\n      padding: 0 7px;\n    }\n  }\n\n  .social-networks {\n\n    [class^='icon-'] {\n      color: $blue;\n      @include size(20px);\n    }\n\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    a {\n      display: block;\n      @include size(20px);\n    }\n    li {\n      margin-left: 10px;\n    }\n  }\n}\n","// Popular Resets (Reset y Normalize 😍)\n@import \"resets\";\n\n// Bringing Manila from its own bower repo\n@import \"manila\";\n\n@mixin debug {\n  @at-root {\n    * {\n      outline: 1px solid red;\n    }\n  }\n}\n\n@mixin std-background {\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n@mixin e($element) {\n    &__#{$element} {\n        @content;\n    }\n}\n\n@mixin m($modifier) {\n    &--#{$modifier} {\n        @content;\n    }\n}\n\n@mixin is($state) {\n  &.is-#{$state} {\n    @content;\n  }\n}\n\n// Daddy-is\n@mixin dis($state) {\n  .is-#{$state} & {\n    @content;\n  }\n}\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n  $extmods: (\n    eot: \"?\",\n    svg: \"#\" + str-replace($name, \" \", \"_\")\n  );\n  $formats: (\n    otf: \"opentype\",\n    ttf: \"truetype\"\n  );\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma);\n  }\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n\n@mixin ieTarget {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n","/// Great mixin for handling sizes\n/// If you only provide one size it will default to a square\n///\n/// @parameter {measure} $width The width of the box\n/// @parameter {measure} $height [$width] The height of the box\n///\n/// @example scss Input\n///   .square {\n///     @include size(15px);\n///   }\n///\n///   .rectangle {\n///     @include size(2em, 2.5em);\n///   }\n///\n/// @example css Output\n///   .square {\n///     width: 15px;\n///     height: 15px; }\n///\n///   .rectangle {\n///     width: 2em;\n///     height: 2.5em; }\n\n@mixin size($width, $height : $width) {\n  width: $width;\n  height: $height; }\n"]}